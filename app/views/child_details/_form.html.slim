section
  .row.margin-top-navbar
    .col-md-6.mx-auto
      .card.mt-5
        .card-header
          h2 = "Formulaire Prospect | Famille #{@family&.name}"
        .card-body
          = simple_form_for [@qualification, @child_detail] do |f|
            .form-inputs
              .container-fluid
                .row
                  .col-md-12
                    = f.hidden_field :data_entry_responsible, value: "#{current_user&.first_name}"
                    = f.input :commercial_responsible, collection: ChildDetail.commercial_responsibles.keys.map { |w| [w.humanize, w] }, label: 'Agent commercial'
                    = f.input :contact_mode, collection: ChildDetail.contact_modes.keys.map { |w| [w.humanize, w] }, label: 'Prise de contact'
                    = f.input :refered_by, collection: ChildDetail.refered_bies.keys.map { |w| [w.humanize, w] }, label: 'Référence'
                    = f.input :reference_name, label: 'Nom référence'
                    = f.input :existing_family, label: 'Famille existante ?', as: :radio_buttons
                    = f.input :gender, collection: ChildDetail.genders.keys.map { |w| [t("views.genders.#{w}"), w] }, label: 'Sexe', include_blank: false
                    = f.input :first_name, label: 'Prénom'
                    = f.input :last_name, label: 'Nom de famille'
                    = f.input :age, label: 'Âge', collection: 10..50, include_blank: false
                    = f.input :email, label: 'Email'
                    = f.input :school, label: 'Etablissement Scolaire'
                    = f.input :school_grade, collection: ChildDetail.school_grades.keys.map { |w| [w.humanize, w] }, label: 'Niveau scolaire'
                    = f.input :duration, label: 'Durée envisagée (en s)'
                    = f.input :month, collection: ChildDetail.months.keys.map { |w| [w.humanize, w] }, label: 'Mois'
                    = f.input :follow_up, collection: ChildDetail.follow_ups.keys.map { |w| [w.humanize, w] }, label: 'Statut'
                    = f.input :comment, label: 'Souhaits de séjours'
                    = f.hidden_field :status, value: 'Prospect'
                    = f.input :partner_company_ids, as: :select2, collection: PartnerCompany.where(nature: 'Organisme'), label_method: lambda { |partner_company| "#{c(partner_company.name)}" }, multiple: true, value_method: :id, include_blank: false, label: 'Choisir le(s) organisme(s)', input_html: {class: 'oli'}
            .form-actions.text-center
              = f.button :button, "Valider le prospect", class: 'btn btn-primary', data: {disable_with: "<i class='fa fas fa-spinner fa-spin olivier'></i>Chargement".html_safe}
