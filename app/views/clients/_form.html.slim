section
  .row.margin-top-navbar
	.col-md-6.mx-auto
	  .card.mt-5
  		.card-header
  		  h2 Formulaire Client
  		.card-body
  		  = simple_form_for [@family, @client] do |f|
  			.form-inputs
  				.container-fluid
  					.row
  						.col-md-12
                - if @child_detail
                  = f.hidden_field :season, value: 'Saison_2018_2019'
                  = f.input :age_category, collection: Client.age_categories.keys.map { |w| [w.humanize, w] }, label: 'Catégorie'
                  = f.input :gender, collection: Client.genders.keys.map { |w| [w.humanize, w] }, label: 'Sexe'
                  = f.input :first_name, label: 'Prénom'
                  = f.input :school, label: 'Etablissement scolaire'
                  = f.input :school_grade, collection: Client.school_grades.keys.map { |w| [w.humanize, w] }, label: 'Niveau scolaire'
                  / = f.input :family_id, collection: Family.all, include_blank: "Merci de sélectionner la famille du client...", label: false, label_method: lambda { |family| "#{family.name.capitalize} | #{family.address_1.capitalize}" }
                  = f.input :birth_date, label: 'Date de naissance', start_year: Time.now.year - 50, end_year: Time.now.year - 8, order: [:day, :month, :year]
                  = f.input :email, label: 'Email'
                  = f.input :phone_number, label: 'Téléphone mobile', input_html: { class: 'client_phone_number' }

                  p
                    a.btn.btn-primary.mt-5.mb-4  aria-controls="collapseExample" aria-expanded="false" data-toggle="collapse" href="#collapseExample" role="button"
                      | A remplir si informations différentes de celle de la famille
                  #collapseExample.collapse
                    .card.card-body
                      = f.input :last_name, label: 'Nom '
                      = f.input :address_1, label: 'Adresse', input_html: {class: 'google_map'}
                      = f.input :address_2, label: 'Complément d\'adresse'
                      = f.input :zip_code, label: 'Code postal', input_html: { class: 'zip_code_field '}

                  h4.mt-4.mb-4 Passeport ou Carte d'identité
                  = f.input :passport_number, label: 'Numéro'
                  = f.input :passport_expiration_date, label: 'Date d\'expiration', start_year: Time.now.year, end_year: Time.now.year + 15, include_blank: true
                  = f.input :country_of_issue, label: 'Pays d\'émission'
                  = f.input :nationality, label: 'Nationalité (en Anglais)', locale: 'en', wrapper_html: {class: ['pb-5', 'border-bottom']}

                  h4.mt-4.mb-4 Langues
                  .row
                    .col-md-6
                      = f.input :first_language, collection: Client.first_languages.keys.map { |w| [w.humanize, w] }, label: false
                      = f.input :first_language_level, collection: Client.first_language_levels.keys.map { |w| [w.humanize, w] }, label: false, wrapper_html: {class: ['pb-5', 'border-bottom']}
                    .col-md-6
                      = f.input :second_language, collection: Client.second_languages.keys.map { |w| [w.humanize, w] }, label: false, include_blank: true
                      = f.input :second_language_level, collection: Client.second_language_levels.keys.map { |w| [w.humanize, w] }, label: false, wrapper_html: {class: ['pb-5', 'border-bottom']}

                  h4.mt-4.mb-4 Autres
                  = f.input :preferred_hobbies, label: 'Hobbies préférés (en Anglais)'
                  = f.input :medical_issue, label: 'Problème médical (en Anglais)'
                  = f.input :smoker, as: :radio_buttons, label: 'Fumeur ?'
                  = f.input :comment, label: 'Commentaire'

                - else
                  = f.input :season,  collection: Client.seasons.keys.map { |w| [w.humanize, w] },label: 'Saison'
                  = f.input :school, label: 'Etablissement scolaire'
                  = f.input :school_grade, collection: Client.school_grades.keys.map { |w| [w.humanize, w] }, label: 'Niveau scolaire'
                  = f.input :age_category, collection: Client.age_categories.keys.map { |w| [w.humanize, w] }, label: 'Catégorie'
                  = f.input :gender, collection: Client.genders.keys.map { |w| [w.humanize, w] }, label: 'Sexe'
                  = f.input :first_name, label: 'Prénom'
                  = f.input :family_id, collection: Family.all, include_blank: "Merci de sélectionner la famille du client...", label: false, label_method: lambda { |family| "Famille #{family.name.capitalize} | #{family.  address_1.capitalize}" }
                  = link_to ("<i class=\"fa fas fa-plus-circle\">ou créer d\'abord sa famille si non existante</i>").html_safe, new_family_path(prospect: false), class: 'btn mb-4'
                  = f.input :birth_date, label: 'Date de naissance', start_year: Time.now.year - 50, end_year: Time.now.year - 8, order: [:day, :month, :year]
                  = f.input :email, label: 'Email'
                  = f.input :phone_number, label: 'Téléphone mobile'

  								// calculer l'âge à partir de la date de naissance et le stocker dans la DB
  								p
  								  a.btn.btn-primary.mt-5.mb-4  aria-controls="collapseExample" aria-expanded="false" data-toggle="collapse" href="#collapseExample" role="button"
  								    | A remplir si informations différentes de celle de la famille
  								#collapseExample.collapse
  								  .card.card-body
  										= f.input :last_name, label: 'Nom '
  										= f.input :address_1, label: 'Adresse', input_html: {class: 'google_map'}
  										= f.input :address_2, label: 'Complément d\'adresse'
  										= f.input :zip_code, label: 'Code postal', input_html: { class: 'zip_code_field '}

  								h4.mt-4.mb-4 Passeport / Carte d'identité
  								= f.input :passport_number, label: 'Numéro'
  								= f.input :passport_expiration_date, label: 'Date d\'expiration', start_year: Time.now.year, end_year: Time.now.year + 15, include_blank: true
  								= f.input :country_of_issue, label: 'Pays d\'émission', locale: 'en'
  								= f.input :nationality, label: 'Nationalité (en Anglais)', wrapper_html: {class: ['pb-5', 'border-bottom']}

  								h4.mt-4.mb-4 Langues
  								.row
  									.col-md-6
  										= f.input :first_language, collection: Client.first_languages.keys.map { |w| [w.humanize, w] }, label: false
  										= f.input :first_language_level, collection: Client.first_language_levels.keys.map { |w| [w.humanize, w] }, label: false, wrapper_html: {class: ['pb-5', 'border-bottom']}
  									.col-md-6
  										= f.input :second_language, collection: Client.second_languages.keys.map { |w| [w.humanize, w] }, label: false, include_blank: true
  										= f.input :second_language_level, collection: Client.second_language_levels.keys.map { |w| [w.humanize, w] }, label: false, wrapper_html: {class: ['pb-5', 'border-bottom']}

  								h4.mt-4.mb-4 Autres
  								= f.input :preferred_hobbies, label: 'Hobbies préférés (en Anglais)'
  								= f.input :medical_issue, label: 'Problèmes médicaux (en Anglais'
  								= f.input :smoker, as: :radio_buttons, label: 'Fumeur'
  								= f.input :comment, label: 'Commentaire'

  			- if @child_detail
  				.form-actions.text-center
  				  = f.button :button, "Valider", class: 'btn btn-primary olivier', data: {disable_with: "<i class='fa fas fa-spinner fa-spin'></i> Chargement".html_safe, target: 'exampleModalCenter', toggle: 'modal'}, name: "child_detail_id",value: @child_detail.id
  			- else
  				.form-actions.text-center
  				  = f.button :button, "Valider", class: 'btn btn-primary olivier', data: {disable_with: "<i class='fa fas fa-spinner fa-spin'></i> Chargement".html_safe, target: 'exampleModalCenter', toggle: 'modal'}, id: 'submit_with_phone'
