section
  .row.margin-top-navbar
    .col-md-6.mx-auto
      .card.mt-5
        .card-header
          h2 Formulaire Séjour Linguistique
        .card-body
          = simple_form_for [@client, @language_stay] do |f|
            .form-inputs
            	.container-fluid
            		.row
            			.col-md-12
                    h4.mt-4.mb-4 Séjour
                    = f.input :data_entry_responsible, label: 'Responsable de saisie', collection: LanguageStay.data_entry_responsibles.keys.map { |w| [w.humanize, w] }
                    = f.input :commercial_responsible, collection: LanguageStay.commercial_responsibles.keys.map { |w| [w.humanize, w] }, label: 'Responsable commercial'
                    = f.input :program_id, collection: Program.all, include_blank: "Merci de sélectionner le type de séjour concerné...", label: false
                    = f.input :partner_company_id, collection: PartnerCompany.where(nature: 'Organisme'), include_blank: "Merci de sélectionner l'organisme concerné...", label: false, wrapper_html: {class: ['pb-5', 'border-bottom']}

                    h4.mt-4.mb-4 Détails
                    = f.input :location, label: 'Lieu', input_html: {class: 'google_map'}
                    = f.input :program_detail_fr, label: 'Détails du programme'
                    = f.input :option_1_fr, label: 'Option 1'
                    = f.input :option_2_fr, label: 'Option 2'
                    = f.input :start_date, label: 'Début'
                    = f.input :end_date, label: 'Fin'
                    = f.input :class_hours, label: 'Nombre de leçons (par semaine)'
                    = f.input :accomodation, collection: LanguageStay.accomodations.keys.map { |w| [t("views.accomodations.#{w}"), w] }, label: 'Logement'
                    = f.input :accomodation_type, collection: LanguageStay.accomodation_types.keys.map { |w| [t("views.accomodation_types.#{w}"), w] }, label: 'Type de logement'
                    = f.input :pension, collection: LanguageStay.pensions.keys.map { |w| [t("views.pensions.#{w}"), w] }, label: 'Pension'
                    = f.input :room, collection: LanguageStay.rooms.keys.map { |w| [t("views.rooms.#{w}"), w] }, label: 'Chambre'
                    = f.input :transfer_aller, label: 'Transfert Aller'
                    = f.input :transfer_retour, label: 'Transfert Retour'
                    = f.input :fee, label: 'Payment en direct du camp', as: :radio_buttons

                    h6.mt-5.mb-4 A remplir en Anglais pour Enrollment Form :
                    = f.input :program_detail, label: 'Program details'
                    = f.input :precisions, label: 'Specific requests'
                    = f.input :option_1, label: 'Option 1'
                    = f.input :option_2, label: 'Option 2'


            .form-actions.text-center
              = f.button :button, "Valider", class: 'btn btn-primary', data: {disable_with: "<i class='fa fas fa-spinner fa-spin'></i>Chargement".html_safe}
ruby:
  conditionals = [
    {
      selector: '#travel_travel_details_attributes_0_is_correspondence',
      when: [{
        event: 'click',
        actions: [{
          type: 'SHOW',
          nodes: ['.landing-page-brand-members'],
        }]
      }]
      }, {
        selector: '#brand_account_display_team_false',
        when: [{
          event: 'click',
          actions: [{
            type: 'HIDE',
            nodes: ['.landing-page-brand-members'],
          }]
        }]
      }, {
        selector: '#brand_account_display_representative_true',
        when: [{
          event: 'click',
          actions: [{
            type: 'SHOW',
            nodes: ['.landing-page-negociation-service'],
          }]
        }]
      }, {
        selector: '#brand_account_display_representative_false',
        when: [{
          event: 'click',
          actions: [{
            type: 'HIDE',
            nodes: ['.landing-page-negociation-service'],
          }]
        }]
      }, {
        selector: '#brand_account_display_marketplace_true',
        when: [{
          event: 'click',
          actions: [{
            type: 'SHOW',
            nodes: ['.landing-page-properties'],
          }]
        }]
      }, {
        selector: '#brand_account_display_marketplace_false',
        when: [{
          event: 'click',
          actions: [{
            type: 'HIDE',
            nodes: ['.landing-page-properties'],
          }]
        }]
      }].to_json

code data-conditionals= conditionals
