section
  .row.margin-top-navbar
    .col-md-6.mx-auto
      .card.mt-5
        .card-header
          h2 Formulaire Séjour
        .card-body
          = simple_form_for [@client, @language_stay] do |f|
            .form-inputs
            	.container-fluid
            		.row
            			.col-md-12
                    h4.mt-4.mb-4 Séjour
                    = f.hidden_field :data_entry_responsible, value: "#{current_user&.first_name}"
                    - if @language_stay.id.nil?
                      = f.input :commercial_responsible, collection: LanguageStay.commercial_responsibles.keys.map { |w| [w.humanize, w] }, label: 'Agent commercial', selected: current_user
                    - else
                      = f.input :commercial_responsible, collection: LanguageStay.commercial_responsibles.keys.map { |w| [w.humanize, w] }, label: 'Agent commercial'
                    = f.input :program_id, collection: Program.order('name ASC'), include_blank: "Merci de sélectionner le type de séjour concerné...", label: false
                    = f.input :partner_company_id, collection: PartnerCompany.where(nature: 'Organisme').order('name ASC'), include_blank: "Merci de sélectionner l'organisme concerné...", label: false, wrapper_html: {class: ['pb-5', 'border-bottom']}

                    h4.mt-4.mb-4 Détails
                    = f.input :location, label: 'Lieu', input_html: {class: 'google_map'}
                    = f.hidden_field :country, class: 'country_field'
                    = f.input :program_detail_fr, label: 'Détails du programme'
                    = f.input :option_1_fr, label: 'Option 1'
                    = f.input :option_2_fr, label: 'Option 2'
                    = f.input :option_3_fr, label: 'Option 3'
                    = f.input :start_date, as: :string, label: 'Début', input_html: {id: "range_start"}
                    = f.input :end_date, as: :string, label: 'Fin', input_html: {id: "range_end"}
                    = f.input :class_hours, label: 'Nombre de leçons (par semaine)'
                    = f.input :accomodation, collection: LanguageStay.accomodations.keys.map { |w| [t("views.accomodations.#{w}"), w] }, label: 'Logement'
                    = f.input :accomodation_type, collection: LanguageStay.accomodation_types.keys.map { |w| [t("views.accomodation_types.#{w}"), w] }, label: 'Type de logement'
                    = f.input :pension, collection: LanguageStay.pensions.keys.map { |w| [t("views.pensions.#{w}"), w] }, label: 'Pension'
                    = f.input :other_pension, label: 'Autre type de pension'
                    = f.input :room, collection: LanguageStay.rooms.keys.map { |w| [t("views.rooms.#{w}"), w] }, label: 'Chambre'
                    - if @language_stay.id.nil?
                      = f.input :transfer_aller, label: 'ou Transfert Aller requis', input_html: { checked: true }
                      = f.input :transfer_retour, label: 'et/ou Transfert Retour requis', input_html: { checked: true }
                      = f.input :other_transfer, label: 'Autre type de transfert'
                    - else
                      = f.input :transfer_aller, label: 'Transfert Aller requis'
                      = f.input :transfer_retour, label: 'Transfert Retour requis'
                      = f.input :other_transfer, label: 'Autre type de transfert'
                    = f.input :fee, label: 'Payment en direct à l\'organisme étranger'

                    h6.mt-5.mb-4 A remplir en Anglais pour Enrollment Form :
                    = f.input :program_detail, label: 'Program details'
                    = f.input :precisions, label: 'Specific requests'
                    = f.input :option_1, label: 'Option 1'
                    = f.input :option_2, label: 'Option 2'
                    = f.input :option_3, label: 'Option 3'

                    h6.mt-5.mb-4 Document(s) manquant(s)
                    .row
                      .col-md-4
                        = f.input :passport_cni, label: 'Passeport ou CNI'
                        = f.input :picture, label: 'Photo'
                        = f.input :junior_waiver, label: 'Junior Waiver / Parent consent'
                        = f.input :medical_form, label: 'Medical Form'
                        = f.input :language_test, label: 'Test de langue'
                      .col-md-4
                        = f.input :rules_and_regulations, label: 'Règlement programme'
                        = f.input :family_file, label: 'Dossier famille'
                        = f.input :school_notes, label: 'Bulletins scolaire'
                        = f.input :teacher_reference, label: 'Teacher Reference'
                        = f.input :visa, label: 'Visa'
                      .col-md-4
                        = f.input :motivation_letter, label: 'Lettre de motivation'
                        = f.input :english_cv, label: 'CV anglais'
                        = f.input :agreement_welcome_school, label: 'Accord accueil école'
                        = f.input :justice_record, label: 'Casier judiciaire'
                        = f.input :flight, label: 'Vol/train'


            .form-actions.text-center
              = f.button :button, "Valider", class: 'btn btn-primary', data: {disable_with: "<i class='fa fas fa-spinner fa-spin'></i>Chargement".html_safe}
ruby:
  conditionals = [
    {
      selector: '#travel_travel_details_attributes_0_is_correspondence',
      when: [{
        event: 'click',
        actions: [{
          type: 'SHOW',
          nodes: ['.landing-page-brand-members'],
        }]
      }]
      }, {
        selector: '#brand_account_display_team_false',
        when: [{
          event: 'click',
          actions: [{
            type: 'HIDE',
            nodes: ['.landing-page-brand-members'],
          }]
        }]
      }, {
        selector: '#brand_account_display_representative_true',
        when: [{
          event: 'click',
          actions: [{
            type: 'SHOW',
            nodes: ['.landing-page-negociation-service'],
          }]
        }]
      }, {
        selector: '#brand_account_display_representative_false',
        when: [{
          event: 'click',
          actions: [{
            type: 'HIDE',
            nodes: ['.landing-page-negociation-service'],
          }]
        }]
      }, {
        selector: '#brand_account_display_marketplace_true',
        when: [{
          event: 'click',
          actions: [{
            type: 'SHOW',
            nodes: ['.landing-page-properties'],
          }]
        }]
      }, {
        selector: '#brand_account_display_marketplace_false',
        when: [{
          event: 'click',
          actions: [{
            type: 'HIDE',
            nodes: ['.landing-page-properties'],
          }]
        }]
      }].to_json

code data-conditionals= conditionals
