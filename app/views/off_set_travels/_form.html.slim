- travel_group = @travel.travel_group
/ - aller_travel_group = travel_group.travel_details.find_by(nature: 'Aller')
/ - retour_travel_group = travel_group.travel_details.find_by(nature: 'Retour')

section
  .row.margin-top-navbar
    .col-md-10.mx-auto
      .card.mt-5
        .card-header
          h2 Formulaire Voyage Groupe Décalé
        .card-body
          = simple_form_for [@travel, @off_set_travel] do |f|
            .form-inputs
            	.container-fluid
            		.row
            			.col-md-12
                    h4.mt-4.mb-4 Voyage Groupe
                    p = "Capacité du voyage groupe: #{travel_group.capacity} personnes"
                    / p = "Aller: #{aller_travel_group.start_date} jusqu'à #{aller_travel_group.end_date}"
                    / / p = "Retour: #{retour_travel_group.start_date} jusqu'à #{retour_travel_group.end_date}"

                    h4.mt-4.mb-4 Modifier l'aller ou le retour
                    = f.input :nature, collection: OffSetTravel.natures.keys.map { |w| [w.humanize, w] }, label: 'Nature', selected: 0
                    = f.input :is_correspondence, as: :radio_buttons, label: 'Avec correspondance ?', checked_value: true
                    = f.input :mode, collection: OffSetTravel.modes.keys.map { |w| [w.humanize, w] }, label: 'Mode de transport', selected: 0
                    = f.input :partner_company_id, collection: PartnerCompany.where(nature: 'Partenaire'), include_blank: "Merci de sélectionner la compagnie du vol...", label: false, label_method: lambda { |partner_company| "#{partner_company&.name&.capitalize} " }
                    = f.input :reference, label: 'Référence'

                    .row
                      .col-md-6
                        h4.mt-3 Départ
                        = f.input :departure_location, label: 'Départ de'
                        = f.input :start_date, label: 'Date de départ'
                        = f.input :start_time, label: 'Heure de départ'
                        = f.input :meeting_time, label: 'Heure de rendez-vous'
                        / = f.input :father_name, label: 'Nom'
                      .col-md-6
                        h4.mt-3 Arrivée
                        = f.input :arrival_location, label: 'Arrivée à'
                        = f.input :end_date, label: 'Date d\'arrivée'
                        = f.input :end_time, label: 'Heure d\'arrivée'
                        / = f.input :end_time, label: 'Heure d\'arrivée'
                    .row.pb-5.mb-5.border-bottom
                      .col-md-6
                        .child_details_section.pt-3.correspondence
                          h3.mt-3 Correspondance
                          .child_details.mt-3
                            = f.simple_fields_for :correspondences do |correspondence|
                              = render 'off_set_travels/correspondence_fields', f: correspondence
                    .form-actions.text-center
                      = f.button :button, "Valider", class: 'btn btn-primary', data: {disable_with: "<i class='fa fas fa-spinner fa-spin olivier'></i>Chargement".html_safe}


ruby:
  conditionals = [
    {
      selector: '#off_set_travel_is_correspondence_true',
      when: [{
        event: 'click',
        actions: [{
          type: 'SHOW',
          nodes: ['.correspondence'],
        }]
      }]
      }, {
        selector: '#off_set_travel_is_correspondence_false',
        when: [{
          event: 'click',
          actions: [{
            type: 'HIDE',
            nodes: ['.correspondence'],
          }]
        }]
      }].to_json

code data-conditionals= conditionals
