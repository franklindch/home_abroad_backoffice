section
  .row.margin-top-navbar
    .col-md-10.mx-auto
      .card.mt-5
        .card-header
          h2 Détails Voyage
        .card-body
          - if @travel_group
            = simple_form_for [@travel_group, @travel_detail] do |f|
              .form-inputs
                .container-fluid
                  .row
                    .col-md-12.mt-5
                      = f.input :is_correspondence, as: :radio_buttons, label: 'Avec correspondance ?', checked_value: true
                      = f.input :nature, collection: TravelDetail.natures.keys.map { |w| [w.humanize, w] }, label: 'Nature'
                      = f.input :mode, collection: TravelDetail.modes.keys.map { |w| [w.humanize, w] }, label: 'Mode de transport', selected: 0
                      - if @travel_group
                        = f.input :partner_company_id, collection: PartnerCompany.where(nature: 'Partenaire'), include_blank: "Merci de sélectionner la compagnie...", label: false, label_method: lambda { |partner_company| "#{partner_company&.name&.capitalize} " }
                      - else
                        = f.input :companies, label: 'Compagnie'
                        = f.input :u_m, label: 'UM ?'

                      = f.input :reference, label: 'Numéro / référence'

                  .row
                    .col-md-6
                      h4.mt-3.travel-type Départ
                      = f.input :departure_location, label: 'Départ de'
                      = f.input :start_date, label: 'Date de départ'
                      = f.input :start_time, label: 'Heure de départ'
                      - if @travel_group
                        = f.input :meeting_time, label: 'Heure de rendez-vous'
                    .col-md-6
                      h4.mt-3.travel-type Arrivée
                      = f.input :arrival_location, label: 'Arrivée à'
                      = f.input :end_date, label: 'Date d\'arrivée'
                      = f.input :end_time, label: 'Heure d\'arrivée'

                  .form-actions.text-center
                    = f.button :button, "Valider", class: 'btn btn-primary mt-3', data: {disable_with: "<i class='fa fas fa-spinner fa-spin olivier'></i>Chargement".html_safe}
          - else
            = simple_form_for [@travel, @travel_detail] do |f|
              .form-inputs
                .container-fluid
                  .row
                    .col-md-12.mt-5
                      = f.input :is_correspondence, as: :radio_buttons, label: 'Avec correspondance ?', checked_value: true
                      = f.input :nature, collection: TravelDetail.natures.keys.map { |w| [w.humanize, w] }, label: 'Nature'
                      = f.input :mode, collection: TravelDetail.modes.keys.map { |w| [w.humanize, w] }, label: 'Mode de transport', selected: 0
                      - if @travel_group
                        = f.input :partner_company_id, collection: PartnerCompany.where(nature: 'Partenaire'), include_blank: "Merci de sélectionner la compagnie...", label: false, label_method: lambda { |partner_company| "#{partner_company&.name&.capitalize} " }
                      - else
                        = f.input :companies, label: 'Compagnie'
                        = f.input :u_m, label: 'UM ?'

                      = f.input :reference, label: 'Numéro / référence'

                  .row
                    .col-md-6
                      h4.mt-3.travel-type Départ
                      = f.input :departure_location, label: 'Départ de'
                      = f.input :start_date, label: 'Date de départ'
                      = f.input :start_time, label: 'Heure de départ'
                      - if @travel_group
                        = f.input :meeting_time, label: 'Heure de rendez-vous'
                    .col-md-6
                      h4.mt-3.travel-type Arrivée
                      = f.input :arrival_location, label: 'Arrivée à'
                      = f.input :end_date, label: 'Date d\'arrivée'
                      = f.input :end_time, label: 'Heure d\'arrivée'

                  .form-actions.text-center
                    = f.button :button, "Valider", class: 'btn btn-primary mt-3', data: {disable_with: "<i class='fa fas fa-spinner fa-spin olivier'></i>Chargement".html_safe}
